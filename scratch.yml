  - color_thresholds:
      - color: black
        value: 0
      - color: violet
        value: 5
      - color: blue
        value: 10
      - color: teal
        value: 15
      - color: green
        value: 20
      - color: chartreuse
        value: 25
      - color: orange
        value: 30
      - color: amber
        value: 35
      - color: yellow
        value: 38
      - color: red
        value: 40
      - color: magenta
        value: 42
      - color: purple
        value: 44


  - color_thresholds:
      - color: black
        value: 0
      - color: violet
        value: 5
      - color: blue
        value: 10
      - color: teal
        value: 20
      - color: green
        value: 30
      - color: chartreuse
        value: 40
      - color: orange
        value: 50
      - color: amber
        value: 60
      - color: yellow
        value: 70
      - color: red
        value: 80
      - color: magenta
        value: 90
      - color: purple
        value: 100


type: vertical-stack
cards:
  - type: glance
    title: Estado Homy
    show_name: false
    entities:
      - entity: sensor.sun_next_rising
      - entity: sensor.sun_next_setting
      - entity: sensor.temperatura_cpu
      - entity: sensor.processor_use
      - entity: sensor.ups_status
  - type: weather-forecast
    name: El Tiempo
    entity: weather.dark_sky





type: custom:mini-graph-card
entities:
    - entity: sensor.piscina_duracion_programa
  name: Duración Depuradora
  show:
    graph: bar

type: vertical-stack
cards:
  - type: 'custom:mini-graph-card'
    entities:
      - sensor.temperature_158d0002e97092
    show:
      labels: true
      icon: true
      state: true
    points_per_hour: 1
    line_width: 8
    font_size: 120
    color_thresholds:
      - value: 0
        color: gray
      - value: 5
        color: violet
      - value: 5
        color: blue
      - value: 10
        color: teal
      - value: 15
        color: cyan
      - value: 20
        color: green
      - value: 20
        color: chartreuse
      - value: 25
        color: orange
      - value: 35
        color: yellow
      - value: 40
        color: red
      - value: 45
        color: purple
  - type: 'custom:mini-graph-card'
    entities:
      - sensor.illumination_158d0002e97092
    show:
      labels: true
      icon: true
      state: true
    points_per_hour: 0.5
    line_width: 8
    font_size: 120
    color_thresholds:
      - value: 0
        color: gray
      - value: 5
        color: violet
      - value: 5
        color: blue
      - value: 10
        color: teal
      - value: 15
        color: cyan
      - value: 20
        color: green
      - value: 20
        color: chartreuse
      - value: 25
        color: orange
      - value: 35
        color: yellow
      - value: 40
        color: red
      - value: 45
        color: purple
  - type: horizontal-stack
    cards:
      - type: 'custom:mini-graph-card'
        entities:
          - sensor.humidity_158d0002e97092
        line_color: blue
        line_width: 6
        font_size: 50
      - type: 'custom:mini-graph-card'
        entities:
          - sensor.pressure_158d0002e97092
        line_color: green
        line_width: 6
        font_size: 50





cards:
  - show_state: false
    state_image:
      'off': /local/AAC_2017_bw.jpeg
      'on': /local/AAC_2017_co.jpeg
    type: picture-entity
    aspect_ratio: 243
    entity: binary_sensor.family_home_aac
    show_name: false
  - show_state: false
    state_image:
      'off': /local/MFC_2014_bw.jpeg
      'on': /local/MFC_2014_co.jpeg
    type: picture-entity
    aspect_ratio: 243
    entity: binary_sensor.family_home_mfc
    show_name: false
  - show_state: false
    state_image:
      'off': /local/AAF_2017_bw.png
      'on': /local/AAF_2017_co.png
    type: picture-entity
    aspect_ratio: 243
    entity: binary_sensor.family_home_aaf
    show_name: false
  - show_state: false
    state_image:
      'off': /local/PAF_2017_bw.png
      'on': /local/PAF_2017_co.png
    type: picture-entity
    aspect_ratio: 243
    entity: binary_sensor.family_home_paf
    show_name: false
type: horizontal-stack




- id: L08_luces_on_escalera_on_sensor
  alias: 'L08 Luces On Escalera Según Sensor'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e464a6
      to: 'on'
  condition:
    condition: or  # 'when dark' condition: either after sunset or before sunrise
    conditions:
      - condition: sun
        after: sunset
        # en la puesta de sol - 30'
        after_offset: "-00:30:00"
      - condition: sun
        before: sunrise
        # en el amanecer +2h'
        before_offset: "+03:00:00"
      #- sensor.illumination_158d0001e464a6  # Sensor luz estudio
  action:
    - service: automation.turn_off
      entity_id: automation.l08_luces_on_escalera_segun_sensor
    # Llamada al Script de Luces Entrada ON
    - service: script.luces_on_escalera_sensor
    # Espera de 5'
    - delay: '00:05:00'
    # Llamada al Script de Luces Entrada OFF
    - service: script.luces_off_escalera_sensor
    #
    - service: automation.turn_on
      entity_id: automation.l08_luces_on_escalera_segun_sensor

luces_on_escalera_sensor:
  alias: 'Luces On Escalera si Sensor'
  sequence:
    - service: light.turn_on
      entity_id:  light.esphome_lb1_l01

luces_off_escalera_sensor:
  alias: 'Luces Off Escalera si Sensor'
  sequence:
    - service: light.turn_off
      entity_id: light.esphome_lb1_l01


# SONOFF S20 - NESSPRESSO
#
- id: S09_esphome_s20_Boton_On_off
  alias: 'S09 Sonoff S20 Boton On'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_s20_nespresso_boton
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.esphome_s20_nespresso

- id: S10_esphome_s20_Sunrise_Switch_On
  alias: 'S10 SonoffS20 Sunrise Switch On'
  trigger:
    - platform: state
      entity_id:
        - light.hue_pasillo
        - light.hue_entrada
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunrise
        after_offset: '-02:00:00'
      - condition: time
        before: '11:00:00'
      - condition: state
        entity_id: light.hue_pasillo
        state: 'on'
      - condition: numeric_state
        entity_id: counter.nespresso_start
        below: 3
      # Hay alguien en casa
      - condition: state
        entity_id: binary_sensor.family_any_home
        state: 'on'
      - condition: state
        entity_id: switch.esphome_s20_nespresso
        state: 'off'
  action:
    # Enciende la Nespresso y activa un timer de espera de 30'
    - service: script.nesspreso_on_timer




TEMPLATE EDITOR
================

# Diferencia entre 2 fechas-horas
{{ as_timestamp(now()) | timestamp_local
}}

{{
states.input_datetime.magiccube_last_action1.attributes.timestamp | timestamp_local
}}

{{
states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action
}}

{{ as_timestamp(now())
-
states.input_datetime.magiccube_last_action1.attributes.timestamp < 5
}}


{% set curhour = now().hour %}
{% if now().weekday() in (0,1,2,3,4) %}
  {% if curhour <= 23 and curhour >= 13 %}
    homeassistant.turn_on
  {% else %}
    homeassistant.turn_off
  {% endif %}
{% else %}
  {% if curhour <= 2 or curhour >= 13 %}
    homeassistant.turn_on
  {% else %}
    homeassistant.turn_off
  {% endif %}
{% endif %}



#
# CODIGO TEMPORAL EXCLUIDO
#

- id: L09_luces_on_estudio_on_sensor
  alias: 'L09 Luces On Estudio Según Sensor'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e464a6
      to: 'on'
  condition:
    condition: or  # 'when dark' condition: either after sunset or before sunrise
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-0:15:00"
      - condition: sun
        before: sunrise
        before_offset: "1:30:00"
  action:
    - service: light.turn_on
      entity_id: light.hue_estudio
      data:
        brightness: 180
        rgb_color: [255, 187, 106]


#
#
# REGLA: MAGIC CUBE ALARMA ARMADO / DESARMADO
#
# Available events are flip90, flip180, move, tap_twice, shake_air, swing, alert, free_fall and rotate.
# The component stores the last action as the attribute last_action.
- id: A10_alarma_magic_cube_update
  alias: 'A10 Alarm Magic Cube Update'
  trigger:
    platform: event
    event_type: cube_action
    event_data:
      entity_id: binary_sensor.cube_158d00024a4a62_2
      #action_type: flip90, flip180, move, tap_twice, shake_air
  action:
    - service: script.magiccube_check_alarm_sequence
    # Siempre se actualiza la última acción y la hora.
    - service: script.magiccube_update_lastaction

#INPUT TEXT
  magiccube_last_action1:
    name: Magic Cube Lastaction1
    initial: ''
    icon: mdi:cube-outline
  magiccube_last_action2:
    name: Magic Cube Lastaction2
    initial: ''
    icon: mdi:cube-outline
# INPUT DATE TIME

  magiccube_last_action1:
    name: Cube Timestamp
    has_date: true
    has_time: true


# SERVICES
magiccube_check_alarm_sequence:
  alias: 'Alarma MagicCube Alarm Sequence'
  sequence:
    - condition: and
      conditions:
        - condition: template
          value_template: '{% if not states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action | string == "alert" %}true{% endif %}'
        - condition: template
          value_template: >-
            {{ as_timestamp(now()) -
               states.input_datetime.magiccube_last_action1.attributes.timestamp < 10
            }}
    - service: script.magiccube_check_arm_away
    - service: script.magiccube_check_disarm

magiccube_check_arm_away:
  alias: 'Alarma MagicCube Arm Away'
  sequence:
    - condition: and
      conditions:
        - condition: template
          value_template: '{{ states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action == "shake_air" }}'
        - condition: template
          value_template: '{{ states.input_text.magiccube_last_action1.state == "rotate" }}'
        - condition: template
          value_template: '{{ not states.alarm_control_panel.ha.state == "armed_away" }}'
    # Llamada al service estándar de armado.  Pasa a Pending y luego Armed_Away
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.ha
    # Notifica Evento
    # La notificación se hace mediente la activación de la regla:
    # alias: 'A2 Alarm Armed Away'

magiccube_check_disarm:
  alias: 'Alarma MagicCube Disarm'
  sequence:
    - condition: and
      conditions:
        - condition: template
          value_template: '{{ states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action == "shake_air" }}'
        - condition: template
          value_template: '{{ states.input_text.magiccube_last_action1.state == "flip90" }}'
        - condition: template
          value_template: '{{ not states.alarm_control_panel.ha.state == "disarmed" }}'
    # Desactiva Alarma
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.ha
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_disarmed
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> ESTADO: Desarmado

magiccube_update_lastaction:
  alias: 'Alarma MagicCube Update Last Action'
  sequence:
    # Si Last_action = "alert" => CANCEL
    #- condition: template
    #  value_template: '{% if not states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action | string == "alert" %}true{% endif %}'
    # Actualiza Última Acciónn
    - service: input_text.set_value
      entity_id: input_text.magiccube_last_action1
      data_template:
        value: '{{ states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action }}'
    # Actualiza Hora Último Evento
    - service: input_datetime.set_datetime
      entity_id: input_datetime.magiccube_last_action1
      data_template:
        date: '{{ as_timestamp(now()) | timestamp_custom("%Y-%m-%d") }}'
        time: '{{ as_timestamp(now()) | timestamp_custom("%H:%M:%S") }}'




# Buen Timer ejemplo

just looking at your code without the means of testing it I can see anything wrong.
Have you tried adapting the example code from the cookbook to see if the results are the same?
Quick cut and paste with your variables inserted should probably work.

automation:
  alias: Turn on bedroom lights when there is movement
  trigger:
    - platform: state
      entity_id: sensor.bedroom_motion
      to: 'yes'
  action:
    service: homeassistant.turn_on
    entity_id: script.timed_lamp

script:
  timed_lamp:
    alias: "Turn on lamp and set timer"
    sequence:
      # Cancel ev. old timers
      - execute_service: script.turn_off
        service_data:
           entity_id: script.timer_off
      - execute_service: light.turn_on
        service_data:
          entity_id: light.bedroom
      # Set new timer
      - execute_service: script.turn_on
        service_data:
          entity_id: script.timer_off

  timer_off:
    alias: "Turn off lamp after 30 minutes"
    sequence:
      - delay:
          minutes: 30
      - execute_service: light.turn_off
        service_data:
          entity_id: light.bedroom