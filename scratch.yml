        # Scripts
        - script.alarma_boton_sirenas_off
        - script.alarma_to_pending
        - script.luces_exterior_timer
        - script.luces_jardin_check_4ch_ch1
        - script.luces_jardin_check_4ch_ch2
        - script.luces_jardin_check_4ch_ch3
        - script.luces_jardin_check_4ch_ch4
        - script.luces_jardin_check_bas_sw2
        - script.luces_jardin_check_bas_sw4
        - script.luces_jardin_check_xia_ext
        - script.luces_off_entrada_sensor
        - script.luces_on_entrada_sensor
        - script.luces_on_family_home
        - script.luz_on_armed_home
        - script.magiccube_check_alarm_sequence
        - script.magiccube_check_arm_away
        - script.magiccube_check_disarm
        - script.magiccube_update_lastaction
        - script.nesspreso_on_timer
        - script.notifica_alarma
        - script.notifica_evento
        - script.notifica_warning
        - script.piscina_timer_cancel
        - script.piscina_timer_pause
        - script.piscina_timer_resume
        - script.piscina_timer_start
        - script.piscina_timer_start_diario
        - script.reset_meta_alarm_trigger
        - script.reset_meta_tracker
        - script.sirena_xiaomi_play_alarm_armed
        - script.sirena_xiaomi_play_alarm_disarmed
        - script.sonoff_initialize
        - script.updatetracker
        - script.xiaomi_play_alarm




# SONOFF S20 - NESSPRESSO
#
- id: S09_Sonoff_S20_Boton_On_off
  alias: 'S09 Sonoff S20 Boton On'
  trigger:
    - platform: state
      entity_id: binary_sensor.sonoff_s20_nespresso_boton
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.sonoff_s20_nespresso

- id: S10_Sonoff_S20_Sunrise_Switch_On
  alias: 'S10 SonoffS20 Sunrise Switch On'
  trigger:
    - platform: state
      entity_id:
        - light.hue_pasillo
        - light.hue_entrada
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunrise
        after_offset: '-02:00:00'
      - condition: time
        before: '11:00:00'
      - condition: state
        entity_id: light.hue_pasillo
        state: 'on'
      - condition: numeric_state
        entity_id: counter.nespresso_start
        below: 3
      # Hay alguien en casa
      - condition: state
        entity_id: binary_sensor.family_any_home
        state: 'on'
      - condition: state
        entity_id: switch.sonoff_s20_nespresso
        state: 'off'
  action:
    # Enciende la Nespresso y activa un timer de espera de 30'
    - service: script.nesspreso_on_timer




TEMPLATE EDITOR
================

# Diferencia entre 2 fechas-horas
{{ as_timestamp(now()) | timestamp_local
}}

{{
states.input_datetime.magiccube_last_action1.attributes.timestamp | timestamp_local
}}

{{
states.binary_sensor.cube_158d00024a4a62_2.attributes.last_action
}}

{{ as_timestamp(now())
-
states.input_datetime.magiccube_last_action1.attributes.timestamp < 5
}}


{% set curhour = now().hour %}
{% if now().weekday() in (0,1,2,3,4) %}
  {% if curhour <= 23 and curhour >= 13 %}
    homeassistant.turn_on
  {% else %}
    homeassistant.turn_off
  {% endif %}
{% else %}
  {% if curhour <= 2 or curhour >= 13 %}
    homeassistant.turn_on
  {% else %}
    homeassistant.turn_off
  {% endif %}
{% endif %}



#
# CODIGO TEMPORAL EXCLUIDO
#

- id: L09_luces_on_estudio_on_sensor
  alias: 'L09 Luces On Estudio Seg√∫n Sensor'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e464a6
      to: 'on'
  condition:
    condition: or  # 'when dark' condition: either after sunset or before sunrise
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-0:15:00"
      - condition: sun
        before: sunrise
        before_offset: "1:30:00"
  action:
    - service: light.turn_on
      entity_id: light.hue_estudio
      data:
        brightness: 180
        rgb_color: [255, 187, 106]


# Buen Timer ejemplo

ust looking at your code without the means of testing it I can see anything wrong.
Have you tried adapting the example code from the cookbook to see if the results are the same?
Quick cut and paste with your variables inserted should probably work.

automation:
  alias: Turn on bedroom lights when there is movement
  trigger:
    - platform: state
      entity_id: sensor.bedroom_motion
      to: 'yes'
  action:
    service: homeassistant.turn_on
    entity_id: script.timed_lamp

script:
  timed_lamp:
    alias: "Turn on lamp and set timer"
    sequence:
      # Cancel ev. old timers
      - execute_service: script.turn_off
        service_data:
           entity_id: script.timer_off
      - execute_service: light.turn_on
        service_data:
          entity_id: light.bedroom
      # Set new timer
      - execute_service: script.turn_on
        service_data:
          entity_id: script.timer_off

  timer_off:
    alias: "Turn off lamp after 30 minutes"
    sequence:
      - delay:
          minutes: 30
      - execute_service: light.turn_off
        service_data:
          entity_id: light.bedroom