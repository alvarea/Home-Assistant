
#-----------------------------------------------------------------------------#
#                                                                             #
# ARRANQUE/PARADA DEL SISTEMA                                                 #
#                                                                             #
#-----------------------------------------------------------------------------#
- id: hass_startup_automation
  alias: hass_startup_scripts
  trigger:
    platform: homeassistant
    # Event can also be 'shutdown'
    event: start
  action:
    # Para todas las reglas durante el arranque del sistema
    - service: automation.turn_off
      data:
        entity_id:
          - group.all_automations
    #
    # Llamada al script para inicializar meta-trackers
    - service: script.reset_meta_tracker
    #
    # Llamada al script para inicializar meta-alarm_trigger
    #- service: script.reset_meta_alarm_trigger
    #
    # Llamada al script de inicialización de interruptores Sonoff
    - service: script.sonoff_initialize
    #
    # Llamada al contador de personas que actualiza sensor.family_home
    - service: python_script.countpeople
    #
    # 30" espera y arranca reglas
    - delay: 30
    - service: automation.turn_on
      data:
        entity_id:
          - group.all_automations

    # Reglas deshabilitadas temporalmente
    #- service: automation.turn_off
    #  entity_id: automation.l02_luces_off_exterior_all_family_home

#
# CERTBOT SSL CERTIFICATE: ALERT TO WARN US IF SOMETHING WENT WRONG.
#
- id: S1_ssl_expiry_notification
  alias: 'S1 SSL expiry notification'
  trigger:
    platform: numeric_state
    entity_id: sensor.ssl_certificate_expiry
    below: 21
  action:
    service: script.turn_on
    entity_id: script.notifica_evento
    data:
      variables:
        title: '*CERTIFICADO SSL*'
        message: >
          >>> EVENTO: El certificado SSL expira en {{ states('sensor.ssl_certificate_expiry') }}

#-----------------------------------------------------------------------------#
#                                                                             #
# TAREAS DIARIAS DEL SISTEMA                                                  #
#                                                                             #
#-----------------------------------------------------------------------------#
- id: hass_daily_automations
  alias: hass_daily_scripts
  trigger:
    - platform: time
      at: '00:01:00'
  action:
    # Para todas las reglas durante el arranque del sistema
    - service: counter.reset
      entity_id: counter.nespresso_start

#-----------------------------------------------------------------------------#
#                                                                             #
# ALARMA: Armado y Control de la Alarma                                       #
#                                                                             #
#-----------------------------------------------------------------------------#

#
# ALARMA AUTOMATICA SENSOR HUMO/FUEGO COCINA
#
- id: F1_alarma_fuego_cocina
  alias: 'F1 Alarma Fuego Cocina'
  trigger:
    - platform: state
      entity_id: binary_sensor.smoke_sensor_158d0001fd321c
      from: 'off'
      to: 'on'
  action:
    - service: script.turn_on
      entity_id: script.alarma_siren_on
    # Script Notificación Alarma
    - service: script.turn_on
      entity_id: script.notifica_alarma
      data:
        variables:
          title: '*ALARMA FUEGO*'
          message: >
            >>> URGENTE: SENSOR HUMO COCINA
#
# REGLA: TEST SONIDOS ALARMA
#
- id: X1_test
  alias: 'X1 TEST ON'
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_test_sirenas
      from: 'off'
      to: 'on'
  action:
    #ringtone_vol:
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_armed


#
# REGLA: ALARMA DISARMED A <PENDING>
#
- id: A0_alarma_disarmed_pending
  alias: 'A0 Alarm Disarmed to Pending'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha
      from: 'disarmed'
      to: 'pending'
  action:
    - service: script.alarma_to_pending
      data_template:
        fromstate: '{{trigger.from_state.state}}'
        tostate: '{{trigger.to_state.state}}'
        ringtone_msg: 10005

#
# REGLA: ALARMA ARMED A <PENDING>
#
- id: A1_alarma_armed_pending
  alias: 'A1 Alarm Armed to Pending'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha
      from: 'armed_home'
      to: 'pending'
    - platform: state
      entity_id: alarm_control_panel.ha
      from: 'armed_away'
      to: 'pending'
  action:
    - service: script.alarma_to_pending
      data_template:
        fromstate: '{{trigger.from_state.state}}'
        tostate: '{{trigger.to_state.state}}'
        ringtone_msg: 10004

#
# REGLA: ARMADO COMPLETADO
#
- id: A2_alarm_armado_correcto
  alias: 'A2 Alarm Armed Away'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha
      to: 'armed_away'
  action:
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_armed
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> ESTADO: Sistema Armado Total

      # >>> MODO: {{ trigger.to_state.state }}

- id: A3_alarma_armado_home_correcto
  alias: 'A3 Alarm Armed Home'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha
      to: 'armed_home'
  action:
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_armed
  # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> ESTADO: Sistema Armado Parcial

#
# REGLA: AVISO Y NOTIFICACION DESARMADO OK
#
- id: A4_alarma_activa_desarmada
  alias: 'A4 Alarm Disarmed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha
      to: 'disarmed'
  action:
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_disarmed
    # Apaga Luz Piloto Gateway
    - service: light.turn_off
      entity_id: light.gateway_light_7811dcb788fa
    # Script Notificación Alarma
    - service: script.turn_on
      #entity_id: script.notifica_alarma CAMBIAR GO LIVE
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> ESTADO: Desarmado

#
# REGLA: TRIGGER ALARMA POR SENSOR EN ARMADO AWAY
#
- id: A5_alarma_trigger_armed_away
  alias: 'A5 Alarm Trigger Armed Away'
  trigger:
    - platform: state
      entity_id:
        - group.sensores_home
        - group.sensores_away
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: alarm_control_panel.ha
        state: armed_away
  action:
    - service: python_script.meta_alarm_trigger
      data_template:
        entity_id: '{{trigger.entity_id}}'
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.ha

#
# REGLA: TRIGGER ALARMA POR SENSOR EN ARMADO HOME
#
- id: A6_alarma_trigger_armed_home
  alias: 'A6 Alarm Trigger Armed Home'
  trigger:
    - platform: state
      entity_id: group.sensores_home
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha
      state: armed_home
  action:
    - service: python_script.meta_alarm_trigger
      data_template:
        entity_id: '{{trigger.entity_id}}'
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.ha

# REGLA: ALARMA ACTIVA SIRENA + NOTIFICACION COMPLETA
#
- id: A7_alarma_disparada
  alias: 'A7 Alarm Triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha
      to: 'triggered'  # triggered
  action:
    # Aviso ALARMA con Xiaomi GW
    - service: script.turn_on
      entity_id: script.xiaomi_play_alarm
    # Script Notificación Alarma
    - service: script.turn_on
      #entity_id: script.notifica_alarma CAMBIAR GO LIVE
      entity_id: script.notifica_alarma
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> URGENTE: ALARMA ACTIVADA

            >>> ZONA: {{ states('sensor.alarm_zone') }}

# REGLA: TRIGGER DESARMADO AUTOMATICO AL AMANECER
#
- id: A8_alarm_home_auto_disarm
  alias: 'A8 Alarm Home Auto Disarm'
  trigger:
    - platform: sun
      event: sunrise
      #offset: "+00:30:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: alarm_control_panel.ha
        state: armed_home
      # Hay alguien en casa
      - condition: state
        entity_id: binary_sensor.family_any_home
        state: 'on'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.ha
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_disarmed
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> ESTADO: Desarmado automático al amanecer.

#
# REGLA: APAGADO BOTON PANICO
#
- id: A9_alarm_boton_panico_off
  alias: 'A9 Alarm Boton Panico Off'
  trigger:
    platform: state
    entity_id: input_boolean.panic_button
    from: 'on'
    to: 'off'
  action:
    # Llamada a script desactivado botón pánico.
    - service: script.alarma_boton_sirenas_off

#
# REGLA: BOTON APAGADO ESPHOME-SW1 ==> SIRENA OFF
#
- id: A10_alarm_sirena_off
  alias: 'A10 Alarm Sirena Interior Off'
  trigger:
    platform: state
    entity_id: binary_sensor.esphome_bas_sw0_boton
    from: 'off'
    to: 'on'
  action:
    # ESPHOME_SW1_SIRENA INTERIOR ==> OFF
    - service: switch.turn_off
      entity_id: switch.esphome_bas_sw0
    - service: light.toggle
      entity_id: light.esphome_bas_sw0_led

#
#
# REGLA: MAGIC CUBE ALARMA ARMADO / DESARMADO
#
# Available events are flip90, flip180, move, tap_twice, shake_air, swing, alert, free_fall and rotate.
# The component stores the last action as the attribute last_action.
- id: A10_alarma_magic_cube_update
  alias: 'A10 Alarm Magic Cube Update'
  trigger:
    platform: event
    event_type: cube_action
    event_data:
      entity_id: binary_sensor.cube_158d00024a4a62_2
      #action_type: flip90, flip180, move, tap_twice, shake_air
  action:
    - service: script.magiccube_check_alarm_sequence
    # Siempre se actualiza la última acción y la hora.
    - service: script.magiccube_update_lastaction



#-----------------------------------------------------------------------------#
#                                                                             #
# FAMILY META TRACKER HOME/AWAY                                               #
#                                                                             #
#-----------------------------------------------------------------------------#

# NMAP ==> prob_given_true: 0.8 - prob_given_false: 0.2
#   - entity_id: device_tracker.aac_iphone_nmap
#   - entity_id: device_tracker.mfc_iphone_nmap
#   - entity_id: 'device_tracker.pi_rashmiphone'
#   - entity_id: 'device_tracker.pi_alokphone'

# IOS APP ==> prob_given_true: 0.99 - prob_given_false: 0.10
#   - device_tracker.aac_ios
#   - device_tracker.mfc_ios
#   - entity_id: 'device_tracker.rashmiappiphone'
#   - entity_id: 'device_tracker.alokiosiphone'

# OWNTRACK ==> prob_given_true: 0.99 - prob_given_false: 0.4
#   - device_tracker.aac_iphone_owntrack
#   - device_tracker.mfc_iphone_owntrack
#   - entity_id: 'device_tracker.rashmisiphone'
#   - entity_id: 'device_tracker.myiphone'

# GEOFENCY ==> prob_given_true: 0.99 - prob_given_false: 0.1
#   - device_tracker.b8b52a3bf0384e72a268705d9b06e496 #AAC
#   - device_tracker.e3c67d6b51bf445ba241a0045bfe0222 #MFC
#   - device_tracker.93e3d52336a54d4d898b204abdf3ee94 #PAF
#   - device_tracker.bef743fa74f2464ba458612ad3e1c195 #AAF
#   - entity_id: 'device_tracker.6b00226793104872afb9248f8a45f957'
#   - entity_id: 'device_tracker.3a196aa7e85e4ab5bee4e3d3af667a09'

- id: update_meta_tracker
  alias: "Update Device Meta Tracker"
  initial_state: 'on'
  trigger:
    # Delayed action for router-based and Owntracks trackers that are not 100% reliable
    - platform: state
      entity_id:
        - device_tracker.aac_iphone_nmap      # NMAP
        - device_tracker.mfc_iphone_nmap      # NMAP
        - device_tracker.paf_iphone_nmap      # NMAP
        - device_tracker.aaf_iphone_nmap      # NMAP
        #- device_tracker.aac_iphone_owntrack  # OWNTRACK
        #- device_tracker.mfc_iphone_owntrack  # OWNTRACK
      to: 'not_home'
      for: '00:07:00'
    #- platform: state
    #  entity_id:
    #    - device_tracker.aac_iphone_owntrack  # OWNTRACK
    #    - device_tracker.mfc_iphone_owntrack  # OWNTRACK
    #  to: 'home'
    - platform: state
      entity_id:
        - device_tracker.aac_iphone_nmap      # NMAP
        - device_tracker.mfc_iphone_nmap      # NMAP
        - device_tracker.paf_iphone_nmap      # NMAP
        - device_tracker.aaf_iphone_nmap      # NMAP
      to: 'home'
      for: '00:00:30'
    - platform: state
      entity_id:
        - device_tracker.aac_ios                          # IOSAPP
        - device_tracker.mfc_ios                          # IOSAPP
        - device_tracker.paf_ios                          # IOSAPP
        - device_tracker.b8b52a3bf0384e72a268705d9b06e496 # AAC
        - device_tracker.e3c67d6b51bf445ba241a0045bfe0222 # MFC
        - device_tracker.93e3d52336a54d4d898b204abdf3ee94 # PAF
        - device_tracker.bef743fa74f2464ba458612ad3e1c195 # AAF
  action:
    - service: script.updatetracker
      data_template:
        entityid: '{{trigger.entity_id}}'
        fromstate: '{{trigger.from_state.state}}'
        tostate: '{{trigger.to_state.state}}'

#-----------------------------------------------------------------------------#
#                                                                             #
# TRACKING FAMILY AT HOME: Control Home/Away                                  #
#                                                                             #
#-----------------------------------------------------------------------------#

- id: T01_family_away
  alias: 'T01 Family Away'
  trigger:
    # Ya no hay nadie en casa
    platform: state
    entity_id: binary_sensor.family_any_home
    from: 'on'
    to: 'off'
  action:
    # Script Luces Apagado Total
    - service: script.luces_off
    # Notifica a Familia NADIE en Casa
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*FAMILY_HOME: NO*'
          message: >
            >>> EVENTO: Nadie en casa

      #     >>> EVENTO: Último en Salir {{ states('sensor.family_last_tracking') }}

- id: T02_family_at_home
  alias: 'T02 Family at Home'
  trigger:
    # Hay alguien en casa
    - platform: state
      entity_id: binary_sensor.family_any_home
      from: 'off'
      to: 'on'
  action:
    # Script encendido Luz piloto si es de noche
    - service: script.turn_on
      entity_id: script.luces_on_family_home
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*FAMILY_HOME: SI*'
          message: >
            >>> EVENTO: Primero en Entrar {{ states('sensor.family_last_tracking') }}

- id: T03_Armed_home_family_at_home
  alias: 'T03 Armed Home Family at Home'
  trigger:
    # Están todos en casa
    - platform: state
      entity_id: binary_sensor.family_all_home
      from: 'off'
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.baye_probability_aaf
      above: 95
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.family_all_home
        state: 'on'
      - condition: state
        entity_id: group.sensores_home
        state: 'off'
      - condition: state
        entity_id: alarm_control_panel.ha
        state: disarmed
      - condition: time
        after: '00:01:00'
        # en el amanecer -2h'
      - condition: sun
        before: sunrise
        before_offset: "02:00:00"
      - condition: numeric_state
        entity_id: sensor.baye_probability_aaf
        above: 95
  action:
    - delay: 0:05
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.ha
    # Aviso sonoro con Xiaomi GW
    - service: script.turn_on
      entity_id: script.sirena_xiaomi_play_alarm_armed
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*ALARMA HOMY*'
          message: >
            >>> EVENTO: Todos en casa después de media noche

            >>> ESTADO: Sistema Armado Automático Parcial

- id: T04_family_sleep_home
  alias: 'T04 Sleep Family Home'
  trigger:
    # Hay alguien en casa
    - platform: state
      entity_id:
        - input_boolean.family_sleep_home_mfc
        - input_boolean.family_sleep_home_acc
        - input_boolean.family_sleep_home_paf
        - input_boolean.family_sleep_home_aaf
  action:
    # Llamada al contador de personas que actualiza sensor.family_home
    - service: python_script.countpeople

- id: T05_family_sleep_home_mfc
  alias: 'T05 Sleep Family Check MFC'
  trigger:
    - platform: time
      at: '23:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.family_home_mfc
        state: 'on'
      - condition: state
        entity_id: input_boolean.family_sleep_home_mfc
        state: 'off'
  action:
    # Llamada al contador de personas que actualiza sensor.family_home
    - service: input_boolean.turn_on
      entity_id: input_boolean.family_sleep_home_mfc
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*FAMILY@HOME*'
          message: >
            >>> Malen está en casa a las 23:00

            >>> Activado el control de Duerme en Casa.

- id: T06_family_sleep_home_aaf
  alias: 'T05 Sleep Family Check AAF'
  trigger:
    - platform: time
      at: '23:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.family_home_aaf
        state: 'on'
      - condition: state
        entity_id: input_boolean.family_sleep_home_aaf
        state: 'off'
  action:
    # Llamada al contador de personas que actualiza sensor.family_home
    - service: input_boolean.turn_on
      entity_id: input_boolean.family_sleep_home_aaf
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*FAMILY@HOME*'
          message: >
            >>> Agu está en casa a las 23:00

            >>> Activado el control de Duerme en Casa.

- id: T07_family_sleep_home_aaf
  alias: 'T05 Sleep Family Check PAF'
  trigger:
    - platform: time
      at: '23:00:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.family_home_paf
        state: 'on'
      - condition: state
        entity_id: input_boolean.family_sleep_home_paf
        state: 'off'
  action:
    # Llamada al contador de personas que actualiza sensor.family_home
    - service: input_boolean.turn_on
      entity_id: input_boolean.family_sleep_home_paf
    # Notifica Evento
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*FAMILY@HOME*'
          message: >
            >>> Paloma está en casa a las 23:00

            >>> Activado el control de Duerme en Casa.

#-----------------------------------------------------------------------------#
#                                                                             #
# REGLAS DE CONTROL DE LUCES Y ALUMBRADO                                      #
#                                                                             #
#-----------------------------------------------------------------------------#

- id: L01_luces_on_exterior_sunset
  alias: 'L01 Luces On Exterior Sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: "+00:15:00"
    #- condition: time
    #  before: '23:59:00'
  action:
    # Encendido Luces Exterior y Jardín
    - service: script.luces_exterior_on
    # Notifica Evento
    #- service: script.turn_on
    #  entity_id: script.notifica_warning
    #  data:
    #    variables:
    #      title: '*LUCES: ON*'
    #      message: >
    #        >>> EVENTO: Puesta de sol hace 15min
    #
    #        >>> LUCES: Alumbrado Exterior ON

- id: L02_luces_off_exterior_sunset4h
  alias: 'L02 Luces Off Exterior Sunset 4h'
  trigger:
    - platform: sun
      event: sunset
      offset: "+04:00:00"
  condition:
    condition: state
    entity_id: switch.wall_switch_right_158d0002236e75
    state: 'on'
  action:
    # Script Luces Exterior Off
    - service: script.luces_exterior_off

- id: L03_luces_off_exterior_all_family_home
  alias: 'L03 Luces Off Exterior All Family Home'
  trigger:
    # Los que duermen ya están en casa
    - platform: state
      entity_id: binary_sensor.family_all_home
      from: 'off'
      to: 'on'
    - platform: time
      at: '00:01:00'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '23:00:00'
      - condition: time
        before: '20:00:00'
      - condition: state
        entity_id: switch.wall_switch_right_158d0002236e75 # Luces exterior
        state: 'on'
      # Están todos en casa
      - condition: state
        entity_id: binary_sensor.family_all_home
        state: 'on'
  action:
    - delay: 0:05
    # Script Luces Exterior Off
    - service: script.luces_exterior_off
    # Notifica a Familia
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*LUCES: OFF*'
          message: >
            >>> EVENTO: Es Medianoche y todos en casa

            >>> LUCES: Alumbrado Exterior Off

- id: L04_luces_on_salon_sunset
  alias: 'L04 Luces On Salon Puesta Sol 30m'
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:30:00"
  condition:
    # Hay alguien en casa
    condition: state
    entity_id: binary_sensor.family_any_home
    state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.room_salon
    # Notifica a Familia
    #- service: script.turn_on
    #  entity_id: script.notifica_warning
    #  data:
    #    variables:
    #      title: '*LUCES: ON*'
    #      message: >
    #        >>> EVENTO: El sol se pone en 1hora
    #
    #        >>> LUCES: Luces Salón On


- id: L05_luces_on_exterior_segun_sensor
  alias: 'L05 Luces On Exterior Segun Sensor'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d0001e637f6
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: switch.wall_switch_right_158d0002236e75
        state: 'off'
      - condition: or  # 'when dark' condition: either after sunset or before sunrise
        conditions:
          - condition: sun
            after: sunset
            # en la puesta de sol + 30'
            after_offset: "00:30:00"
          - condition: sun
            before: sunrise
            # en el amanecer -1h'
            before_offset: "01:00:00"
          - condition: numeric_state
            entity_id: sensor.illumination_158d0001e637f6
            below: 0
  action:
    - service: script.luces_exterior_timer

- id: L06_luces_off_sunrise
  alias: 'L06 Luces Off Before Sunrise'
  trigger:
    - platform: time
      at: "02:00:00"
    - platform: time
      at: "03:30:00"
    - platform: time
      at: "04:00:00"
    - platform: time
      at: "05:00:00"
  condition:
    condition: or
    conditions:
      # LIGHT         room_cocina	                    PHILIPS             Cocina
      # LIGHT         room_entrada	                    PHILIPS             Entrada
      # LIGHT         room_estudio	                    PHILIPS             Estudio
      # LIGHT         room_pasillo	                    PHILIPS             Pasillo
      # LIGHT         room_salon	                    PHILIPS             Salon
      - condition: state
        entity_id: light.estudio            # Room Estudio
        state: 'on'
      - condition: state
        entity_id: light.salon              # Room Salon
        state: 'on'
      - condition: state
        entity_id: light.cocina             # Room Cocina
        state: 'on'
      - condition: state
        entity_id: group.luces_exterior_grp # Luces exterior
        state: 'on'
  action:
    # Apagado Luces Casa
    - service: script.luces_off
    # Notifica a Familia
    - service: script.turn_on
      entity_id: script.notifica_evento
      data:
        variables:
          title: '*LUCES: OFF*'
          message: >
            >>> EVENTO: Luces encendidas antes del amanecer

            >>> LUCES: Apagado total

- id: L07_luces_on_entrada_on_sensor
  alias: 'L07 Luces On Entrada Según Sensor'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_sensor_158d0001e55903
        - binary_sensor.door_window_sensor_158d00022b393c
      to: 'on'
  condition:
    condition: or  # 'when dark' condition: either after sunset or before sunrise
    conditions:
      - condition: sun
        after: sunset
        # en la puesta de sol - 30'
        after_offset: "-00:30:00"
      - condition: sun
        before: sunrise
        # en el amanecer +2h'
        before_offset: "+03:00:00"
  action:
    - service: automation.turn_off
      entity_id: automation.l07_luces_on_entrada_segun_sensor
    # Llamada al Script de Luces Entrada ON
    - service: script.luces_on_entrada_sensor
    # Espera de 5'
    - delay: '00:05:00'
    # Llamada al Script de Luces Entrada ON
    - service: script.luces_off_entrada_sensor
    #
    - service: automation.turn_on
      entity_id: automation.l07_luces_on_entrada_segun_sensor


#-----------------------------------------------------------------------------#
#                                                                             #
# REGLAS DE CONTROL DE SMART SWITCH ESPHOME                                   #
#                                                                             #
#-----------------------------------------------------------------------------#

#
# ESPHOME 4CH - JARDIN
#
- id: S01_esphome_4ch_Boton1_On_off
  alias: 'S01 Sonoff 4CH Boton1 On'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_4ch_button_1
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.esphome_4ch_relay_1

- id: S02_esphome_4ch_Boton2_On_off
  alias: 'S01 Sonoff 4CH Boton2 On'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_4ch_button_2
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.esphome_4ch_relay_2

- id: S03_esphome_4ch_Boton3_On_off
  alias: 'S03 Sonoff 4CH Boton3 On'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_4ch_button_3
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.esphome_4ch_relay_3

- id: S04_esphome_4ch_Status
  alias: 'S04 Sonoff 4CH Status'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_4ch_status
      from: 'on'
      to: 'off'
      for: '00:05:00'
  action:
    # Script Notificación Alarma
    - service: script.turn_on
      entity_id: script.notifica_alarma
      data:
        variables:
          title: '*AVISO FALLO ELECTRICO*'
          message: >
            >>> URGENTE: CUADRO ELECTRICO JARDIN SIN CORRIENTE

- id: S05_Sonoff_POW_Status
  alias: 'S05 Sonoff POW Status'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_pow_sw1_status
      from: 'on'
      to: 'off'
      for: '00:05:00'
  action:
    # Script Notificación Alarma
    - service: script.turn_on
      entity_id: script.notifica_alarma
      data:
        variables:
          title: '*AVISO FALLO ELECTRICO*'
          message: >
            >>> URGENTE: CUADRO ELECTRICO DEPURADORA PISCINA SIN CORRIENTE

# ESPHOME POW - DEPURADORA PISCINA
#
- id: S06_timer_piscina_start
  alias: 'S06 Timer Piscina Start'
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.piscina_start_time.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.piscina_programador  # Sensor del programador on/off
        state: 'on'
      - condition: state
        entity_id: binary_sensor.piscina_dia_ejecucion  # Sensor que indica si es día de ejecución en función de la lista input_select.piscina_programador_dias
        state: 'on'
  action:
    # Timer Programador Diario Piscina
    - service: script.piscina_timer_start_diario


- id: S07_timer_piscina_end
  alias: 'S07 Timer Piscina End'
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.piscina
  action:
    # Inicia el Timer de la Piscina
    - service: script.piscina_timer_cancel
    # Actualiza Valor Duración Programa Activo
    - service: input_text.set_value
      entity_id: input_text.piscina_duracion_programa
      data_template:
        value: ''

- id: S08_set_hora_final_planificado
  alias: 'S08 Set Hora Final Planificado'
  trigger:
    - platform: state
      entity_id: sensor.piscina_diario_endtime
    - platform: state
      entity_id: sensor.piscina_duracion_planificada
  action:
    # Actualiza Valor input_datetime.piscina_end_time
    - service: input_datetime.set_datetime
      entity_id: input_datetime.piscina_end_time
      data_template:
        time: '{{ states.sensor.piscina_diario_endtime.state }}'

# ESPHOME S20 - SW1 Radiador Dormitorio Principal
#
- id: S09_esphome_S20_SW1_Toogle
  alias: 'S09 Sonoff S20 SW1 Toogle'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_s20_sw1_boton
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.esphome_s20_sw1

- id: S09b_esphome_S20_SW3_Toogle
  alias: 'S09b Sonoff S20 SW3 Toogle'
  trigger:
    - platform: state
      entity_id: binary_sensor.esphome_s20_sw3_boton
      from: 'off'
      to: 'on'
  action:
    - service: switch.toggle
      entity_id: switch.esphome_s20_sw3

- id: S10_esphome_S2_Switch_On_Sunset
  alias: 'S10 Calefaccion On Sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: "+03:00:00"
    - platform: sun
      event: sunrise
      offset: "-02:00:00"
  condition:
    # Hay alguien en casa
    condition: state
    entity_id: binary_sensor.family_any_home
    state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.esphome_s20_sw1
    - service: switch.turn_on
      entity_id: switch.esphome_s20_sw3
    # Notifica a Familia
    - service: script.turn_on
      entity_id: script.notifica_warning
      data:
        variables:
          title: '*CALEFACCION ON*'
          message: >
            >>> EVENTO: Se enciende calefacción dormitorios

            >>> LUGAR: Dormitorio MFC + Dormitorio PAF

- id: S11_esphome_S20_Switch_Off_Hora02_00
  alias: 'S11 SonoffS20 Switch Off Hora0200'
  trigger:
    - platform: time
      at: '02:00:00'
  action:
    - service: switch.turn_off
      entity_id: switch.esphome_s20_sw1
    - service: switch.turn_off
      entity_id: switch.esphome_s20_sw3
    # Notifica a Familia
    - service: script.turn_on
      entity_id: script.notifica_warning
      data:
        variables:
          title: '*CALEFACCION*'
          message: >
            >>> EVENTO: Se apaga calefacción dormitorios de madrugada

            >>> LUGAR: Dormitorio MF + Dormitorio PAF

- id: S12_esphome_S20_Switch_Off_Sunrise_30
  alias: 'S12 SonoffS20 Switch Off Sunrise_30'
  trigger:
    - platform: sun
      event: sunrise
      offset: "00:00:00"
  action:
    - service: switch.turn_off
      entity_id: switch.esphome_s20_sw1
    - service: switch.turn_off
      entity_id: switch.esphome_s20_sw3
    # Notifica a Familia
    - service: script.turn_on
      entity_id: script.notifica_warning
      data:
        variables:
          title: '*CALEFACCION*'
          message: >
            >>> EVENTO: Se apaga calefacción al Amanecer

            >>> LUGAR: Dormitorio MF + Dormitorio PAF

#
# ESPHOME BASIC SW2 PORCHE PISCINA
#
- id: S13_esphome_bas_SW2_Porche_Piscina
  alias: 'S13 Sonoff SW2 Porche Piscina'
  trigger:
    platform: state
    entity_id: binary_sensor.esphome_bas_sw1_boton
    from: 'off'
    to: 'on'
  action:
    # ESPHOME_SW2 ==> OFF
    - service: switch.toogle
      entity_id: switch.esphome_bas_sw1
    - service: light.toggle
      entity_id: light.esphome_bas_sw1_led

#
# ESPHOME BASIC SW4 PORCHE SALON
#
- id: S14_esphome_bas_SW4_Porche_Piscina
  alias: 'S14 Sonoff SW4 Porche Piscina'
  trigger:
    platform: state
    entity_id: binary_sensor.esphome_bas_sw4_boton
    from: 'off'
    to: 'on'
  action:
    # ESPHOME_SW4 ==> OFF
    - service: switch.toogle
      entity_id: switch.esphome_bas_sw4
    - service: light.toggle
      entity_id: light.esphome_bas_sw4_led
